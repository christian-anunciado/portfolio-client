---
import "@fontsource/geist-sans";
import { SEO } from "astro-seo";
import { ViewTransitions } from "astro:transitions";
import OgImage from "../../public/og_image.jpg";
import LeftNavbar from "../components/nav/LeftNavbar.astro";
import MobileNav from "../components/nav/MobileNav.astro";
import CurrentTimeHeader from "../components/tsx/current-time-header";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <meta name="generator" content={Astro.generator} />
    <SEO
      title="Christian Anunciado | Web Developer"
      description="I build well-crafted websites that look good and work well."
      openGraph={{
        basic: {
          title: "Christian Anunciado | Web Developer",
          image: OgImage.src,
          type: "website",
        },
        optional: {
          description:
            "I build well-crafted websites that look good and work well.",
        },
      }}
    />

    <ViewTransitions />

    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }

      document.addEventListener("astro:after-swap", function () {
        if (localStorage.getItem("theme") === "dark")
          document.documentElement.classList.toggle("dark", true);
      });
    </script>

    <script is:inline>
      // Necessary for view transitions
      document.addEventListener("astro:after-swap", () => {
        if (
          localStorage.theme === "dark" ||
          (!("theme" in localStorage) &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          document.documentElement.classList.add("dark");
        }
      });

      if (
        localStorage.theme === "dark" ||
        (!("theme" in localStorage) &&
          window.matchMedia("(prefers-color-scheme: dark)").matches)
      ) {
        document.documentElement.classList.add("dark");
      } else {
        document.documentElement.classList.remove("dark");
      }
    </script>
  </head>
  <style is:global>
    *,
    body {
      transition: all 0.3s ease-out;
      transition-property: background-color, color;
    }
    .icon {
      transition: none !important;
      -moz-transition: none !important;
      -webkit-transition: none !important;
      -o-transition: none !important;
    }
  </style>
  <body
    class="flex h-screen flex-col bg-gradient-to-b from-zinc-50 to-zinc-300 text-slate-200 md:flex-row dark:bg-gradient-to-b dark:from-zinc-800 dark:to-zinc-900"
  >
    <LeftNavbar transition:persist />
    <main
      class="relative h-[100svh] w-full overflow-y-auto bg-dot-black/15 dark:bg-dot-black/[0.8]"
    >
      <CurrentTimeHeader client:load />
      <MobileNav />

      <slot />
    </main>
  </body>
</html>
